% Data for the number of elements
elements = [1000, 2000, 5000, 40000, 1000000];

% Data for Selection Sort swaps
selection_sort_swaps = [1000, 2000, 5000, 40000, NaN];

% Data for Selection Sort compares
selection_sort_compares = [499500, 1999000, 12497500, 799980000, NaN];

% Data for Insertion Sort swaps
insertion_sort_swaps = [244657, 980009, 6237344, 400153310, NaN];

% Data for Insertion Sort compares
insertion_sort_compares = [245650, 982000, 6242335, 400193298, NaN];

% Data for Bubble Sort swaps
bubble_sort_swaps = [244657, 980009, 6237344, 400153310, NaN];

% Data for Bubble Sort compares
bubble_sort_compares = [967032, 3766116, 24955008, 1596640083, NaN];

% Data for QuickSort Basic swaps
quicksort_basic_swaps = [2829, 6066, 17003, 162665, 5135452];

% Data for QuickSort Basic compares
quicksort_basic_compares = [16298, 38816, 105654, 1090820, 36809452];

% Data for QuickSort Optimized swaps
quicksort_optimized_swaps = [2632, 5592, 15737, 151965, 4890794];

% Data for QuickSort Optimized compares
quicksort_optimized_compares = [16709, 36716, 102406, 1122355, 37066242];

% Data for MergeSort swaps
merge_swaps = [19952, 43904, 123616, 1228928, 39902848];

% Data for MergeSort compares
merge_compares = [8723, 19442, 55269, 561903, 18673633];

% Plotting the results for swaps in one graph
figure;

% Selection Sort
semilogy(elements, selection_sort_swaps, '-o', 'DisplayName', 'Selection Sort');
hold on;

% Insertion Sort
semilogy(elements, insertion_sort_swaps, '-o', 'DisplayName', 'Insertion Sort');

% Bubble Sort
semilogy(elements, bubble_sort_swaps, '-o', 'DisplayName', 'Bubble Sort');

% QuickSort Basic
semilogy(elements, quicksort_basic_swaps, '-o', 'DisplayName', 'QuickSort Basic');

% QuickSort Optimized
semilogy(elements, quicksort_optimized_swaps, '-o', 'DisplayName', 'QuickSort Optimized');

% MergeSort
semilogy(elements, merge_swaps, '-o', 'DisplayName', 'MergeSort');

xlabel('Number of Elements');
ylabel('Swaps (log scale)');
title('Comparison of Sorting Algorithms - Swaps');
legend('Location', 'Best');
grid on;
axis tight;

% Save the figure
saveas(gcf, 'sorting_swaps_comparison.png');

% Plotting the results for compares in another graph
figure;

% Selection Sort
loglog(elements, selection_sort_compares, '-o', 'DisplayName', 'Selection Sort');
hold on;

% Insertion Sort
loglog(elements, insertion_sort_compares, '-o', 'DisplayName', 'Insertion Sort');

% Bubble Sort
loglog(elements, bubble_sort_compares, '-o', 'DisplayName', 'Bubble Sort');

% QuickSort Basic
loglog(elements, quicksort_basic_compares, '-o', 'DisplayName', 'QuickSort Basic');

% QuickSort Optimized
loglog(elements, quicksort_optimized_compares, '-o', 'DisplayName', 'QuickSort Optimized');

% MergeSort
loglog(elements, merge_compares, '-o', 'DisplayName', 'MergeSort');

xlabel('Number of Elements');
ylabel('Compares (log scale)');
title('Comparison of Sorting Algorithms - Compares');
legend('Location', 'Best');
grid on;
axis tight;

% Save the figure
saveas(gcf, 'sorting_compares_comparison.png');